<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
</head>
<body class="canvas-wrapper">
  <div class="container">
  <% include ../partials/footer %>
  </div>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js" crossorigin="anonymous"></script>
  <script>
    $(document).ready(function() {
        var shapeDict = <%- JSON.stringify(testvar) %>;
        console.log(testvar.autopsy);
        var anarchy = false;
        var canvas, ctx, img, width, shapes, urls;

        //values for when canvas width is 1000
        /*var shapeDict = [
          {'url': '/autopsy-report', 'shape': [610, 120, 325, 50]},
          {'url': '/agitator/attack', 'shape': [400, 190, 60, 65]},
          {'url': '/mayor', 'shape': [100, 100, 40, 40]}
        ];
        shapeDict = buildRevisedShapes();*/

        canvas = document.createElement('canvas');
        ctx = canvas.getContext('2d');
        $('body').prepend(canvas);

        img = new Image();
        img.src = '/images/cypher.jpg';
        img.onload = function() {
          resizing();
          $(canvas).on('click', checkPos);
        };
        $(window).resize(resizing);

        function buildRevisedShapes() {
            result = [shapeDict[0], shapeDict[2]];
            if (anarchy) result.push(shapeDict[1]);
            return result;
        }

        function checkPos(evt) {
          for(var i = 0; i < shapeDict.length; i++) {
            var off = $(canvas).offset();
            var sh = shapeDict[i].shape;
            var left = scale(sh[0]) + off.left;
            var right = left + scale(sh[2]) + off.left;
            var top = scale(sh[1]) + off.top;
            var bottom = top + scale(sh[3]) + off.top;
            if(evt.clientX > left && evt.clientX < right) {
              if(evt.clientY > top && evt.clientY < bottom) {
                $(location).attr('href', shapeDict[i].url);
              }
            }
          }
        }

        function scale(val) {
          return val * width / 1000;
        }

        function drawSquare(arr) {
          ctx.rect(scale(arr[0]), scale(arr[1]), scale(arr[2]), scale(arr[3]));
          ctx.stroke();
        }

        function resizing() {
          canvas.width = document.body.clientWidth;
          width = canvas.width;
          canvas.height = img.height/img.width * canvas.width;
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);
          for(var i = 0; i < shapeDict.length; i++) {
            drawSquare(shapeDict[i].shape);
          }
        }
      });
  </script>
</body>
</html>
