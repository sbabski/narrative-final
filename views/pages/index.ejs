<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
</head>
<body class="canvas-wrapper">
  <div class="container">
  <% include ../partials/footer %>
  </div>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js" crossorigin="anonymous"></script>
  <script>

    $(document).ready(function() {
        var anarchy = <%- JSON.stringify(anarchy) %>;
        var canvas, ctx, img, width, shapes, urls;
        
        urls = ['/autopsy-report', '/agitator/attack', '/mayor'];
        //values for when canvas width is 1000
        shapes = [[610, 120, 325, 50], [400, 190, 60, 65], [100, 100, 40, 40]]
        shapes = buildRevisedShapes();

        canvas = document.createElement('canvas');
        ctx = canvas.getContext('2d');
        $('body').prepend(canvas);

        img = new Image();
        img.src = '/images/cypher.jpg';
        img.onload = function() {
          resizing();
          $(canvas).on('click', checkPos);
        };
        $(window).resize(resizing);

        function buildRevisedShapes() {
            result = [shapes[0]];
            if (anarchy) result.push(shapes[1]);
            return result;
        }

        function checkPos(evt) {
          for(var i = 0; i < shapes.length; i++) {
            var off = $(canvas).offset();
            var left = scale(shapes[i][0]) + off.left;
            var right = left + scale(shapes[i][2]) + off.left;
            var top = scale(shapes[i][1]) + off.top;
            var bottom = top + scale(shapes[i][3]) + off.top;
            if(evt.clientX > left && evt.clientX < right) {
              if(evt.clientY > top && evt.clientY < bottom) {
                console.log(urls[i]);
                $(location).attr('href', urls[i]);
              }
            }
          }
        }

        function scale(val) {
          return val * width / 1000;
        }

        function drawSquare(arr) {
          ctx.rect(scale(arr[0]), scale(arr[1]), scale(arr[2]), scale(arr[3]));
          ctx.stroke();
        }

        function resizing() {
          canvas.width = document.body.clientWidth;
          width = canvas.width;
          canvas.height = img.height/img.width * canvas.width;
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);
          for(var i = 0; i < shapes.length; i++) {
            drawSquare(shapes[i]);
          }
        }
      });
  </script>
</body>
</html>
